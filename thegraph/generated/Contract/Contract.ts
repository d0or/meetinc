// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class MeetupCreated extends EthereumEvent {
  get params(): MeetupCreated__Params {
    return new MeetupCreated__Params(this);
  }
}

export class MeetupCreated__Params {
  _event: MeetupCreated;

  constructor(event: MeetupCreated) {
    this._event = event;
  }

  get url(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class Contract extends SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  events(param0: Bytes): boolean {
    let result = super.call("events", [EthereumValue.fromFixedBytes(param0)]);

    return result[0].toBoolean();
  }

  try_events(param0: Bytes): CallResult<boolean> {
    let result = super.tryCall("events", [
      EthereumValue.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }
}

export class RsvpForEventCall extends EthereumCall {
  get inputs(): RsvpForEventCall__Inputs {
    return new RsvpForEventCall__Inputs(this);
  }

  get outputs(): RsvpForEventCall__Outputs {
    return new RsvpForEventCall__Outputs(this);
  }
}

export class RsvpForEventCall__Inputs {
  _call: RsvpForEventCall;

  constructor(call: RsvpForEventCall) {
    this._call = call;
  }

  get url(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RsvpForEventCall__Outputs {
  _call: RsvpForEventCall;

  constructor(call: RsvpForEventCall) {
    this._call = call;
  }
}
